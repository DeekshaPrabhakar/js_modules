{
  "_args": [
    [
      {
        "raw": "extract-text-webpack-plugin@2.0.0-beta.4",
        "scope": null,
        "escapedName": "extract-text-webpack-plugin",
        "name": "extract-text-webpack-plugin",
        "rawSpec": "2.0.0-beta.4",
        "spec": "2.0.0-beta.4",
        "type": "version"
      },
      "/Users/deekshaprabhakar/Documents/Developer/Webpack/js_modules"
    ]
  ],
  "_from": "extract-text-webpack-plugin@2.0.0-beta.4",
  "_id": "extract-text-webpack-plugin@2.0.0-beta.4",
  "_inCache": true,
  "_location": "/extract-text-webpack-plugin",
  "_nodeVersion": "6.2.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/extract-text-webpack-plugin-2.0.0-beta.4.tgz_1472761469819_0.6251052902080119"
  },
  "_npmUser": {
    "name": "sokra",
    "email": "tobias.koppers@googlemail.com"
  },
  "_npmVersion": "3.9.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "extract-text-webpack-plugin@2.0.0-beta.4",
    "scope": null,
    "escapedName": "extract-text-webpack-plugin",
    "name": "extract-text-webpack-plugin",
    "rawSpec": "2.0.0-beta.4",
    "spec": "2.0.0-beta.4",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/extract-text-webpack-plugin/-/extract-text-webpack-plugin-2.0.0-beta.4.tgz",
  "_shasum": "d32393069e7d90c8318d48392302618b56bc1ba9",
  "_shrinkwrap": null,
  "_spec": "extract-text-webpack-plugin@2.0.0-beta.4",
  "_where": "/Users/deekshaprabhakar/Documents/Developer/Webpack/js_modules",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack/extract-text-webpack-plugin/issues"
  },
  "dependencies": {
    "async": "^1.5.0",
    "loader-utils": "^0.2.3",
    "webpack-sources": "^0.1.0"
  },
  "description": "Extract text from bundle into a file.",
  "devDependencies": {
    "codecov.io": "^0.1.2",
    "coveralls": "^2.11.2",
    "css-loader": "^0.21.0",
    "file-loader": "^0.8.4",
    "istanbul": "^0.3.13",
    "mocha": "^2.3.3",
    "mocha-lcov-reporter": "0.0.2",
    "raw-loader": "^0.5.1",
    "should": "^7.1.1",
    "style-loader": "^0.13.0",
    "webpack": "^2.1.0-beta"
  },
  "directories": {},
  "dist": {
    "shasum": "d32393069e7d90c8318d48392302618b56bc1ba9",
    "tarball": "https://registry.npmjs.org/extract-text-webpack-plugin/-/extract-text-webpack-plugin-2.0.0-beta.4.tgz"
  },
  "gitHead": "8232a3e5c5c719c1a56228fed0c3d12a0c90eded",
  "homepage": "http://github.com/webpack/extract-text-webpack-plugin",
  "license": "MIT",
  "maintainers": [
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    }
  ],
  "name": "extract-text-webpack-plugin",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^2.1.0-beta.19"
  },
  "readme": "# extract text plugin for webpack 2\r\n\r\nThe API has changed since version 1. For the webpack 1 version, see [the README in the webpack-1 branch](https://github.com/webpack/extract-text-webpack-plugin/blob/webpack-1/README.md).\r\n\r\n## Usage example with css\r\n\r\n``` javascript\r\nvar ExtractTextPlugin = require(\"extract-text-webpack-plugin\");\r\nmodule.exports = {\r\n\tmodule: {\r\n\t\tloaders: [\r\n\t\t\t{ test: /\\.css$/, loader: ExtractTextPlugin.extract({\r\n\t\t\t\tfallbackLoader: \"style-loader\",\r\n\t\t\t\tloader: \"css-loader\"\r\n\t\t\t}) }\r\n\t\t]\r\n\t},\r\n\tplugins: [\r\n\t\tnew ExtractTextPlugin(\"styles.css\")\r\n\t]\r\n}\r\n```\r\n\r\nIt moves every `require(\"style.css\")` in entry chunks into a separate css output file. So your styles are no longer inlined into the javascript, but separate in a css bundle file (`styles.css`). If your total stylesheet volume is big, it will be faster because the stylesheet bundle is loaded in parallel to the javascript bundle.\r\n\r\nAdvantages:\r\n\r\n* Fewer style tags (older IE has a limit)\r\n* CSS SourceMap (with `devtool: \"source-map\"` and `css-loader?sourceMap`)\r\n* CSS requested in parallel\r\n* CSS cached separate\r\n* Faster runtime (less code and DOM operations)\r\n\r\nCaveats:\r\n\r\n* Additional HTTP request\r\n* Longer compilation time\r\n* More complex configuration\r\n* No runtime public path modification\r\n* No Hot Module Replacement\r\n\r\n## API\r\n\r\n``` javascript\r\nnew ExtractTextPlugin(options: filename | object)\r\n```\r\n\r\n* `options.filename: string` _(required)_ the filename of the result file. May contain `[name]`, `[id]` and `[contenthash]`\r\n  * `[name]` the name of the chunk\r\n  * `[id]` the number of the chunk\r\n  * `[contenthash]` a hash of the content of the extracted file\r\n* `options.allChunks: boolean` extract from all additional chunks too (by default it extracts only from the initial chunk(s))\r\n* `options.disable: boolean` disables the plugin\r\n* `options.id: string` Unique ident for this plugin instance. (For advanced usage only, by default automatically generated)\r\n\r\nThe `ExtractTextPlugin` generates an output file per entry, so you must use `[name]`, `[id]` or `[contenthash]` when using multiple entries.\r\n\r\n``` javascript\r\nExtractTextPlugin.extract(options: loader | object)\r\n```\r\n\r\nCreates an extracting loader from an existing loader. Supports loaders of type `{ loader: string; query: object }`.\r\n\r\n* `options.loader: string | object | loader[]` _(required)_ the loader(s) that should be used for converting the resource to a css exporting module\r\n* `options.fallbackLoader: string | object | loader[]` the loader(s) that should be used when the css is not extracted (i.e. in an additional chunk when `allChunks: false`)\r\n* `options.publicPath: string` override the `publicPath` setting for this loader\r\n\r\nThere is also an `extract` function on the instance. You should use this if you have more than one `ExtractTextPlugin`.\r\n\r\n```javascript\r\nlet ExtractTextPlugin = require('extract-text-webpack-plugin');\r\n\r\n// multiple extract instances\r\nlet extractCSS = new ExtractTextPlugin('stylesheets/[name].css');\r\nlet extractLESS = new ExtractTextPlugin('stylesheets/[name].less');\r\n\r\nmodule.exports = {\r\n  ...\r\n  module: {\r\n    loaders: [\r\n      { test: /\\.scss$/i, loader: extractCSS.extract(['css','sass']) },\r\n      { test: /\\.less$/i, loader: extractLESS.extract(['css','less']) },\r\n      ...\r\n    ]\r\n  },\r\n  plugins: [\r\n    extractCSS,\r\n    extractLESS\r\n  ]\r\n};\r\n```\r\n\r\n## License\r\n\r\nMIT (http://www.opensource.org/licenses/mit-license.php)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/webpack/extract-text-webpack-plugin.git"
  },
  "scripts": {
    "cover": "istanbul cover _mocha",
    "publish-patch": "mocha && npm version patch && git push && git push --tags && npm publish",
    "test": "mocha",
    "travis": "npm run cover -- --report lcovonly"
  },
  "version": "2.0.0-beta.4"
}
